class MyEntityRepDB:
    """Класс для работы с базой данных и манипуляций с объектами."""
    
    def __init__(self, connection_string: str):
        self.db_connection = DBConnection(connection_string)
    
    def get_by_id(self, entity_id: int):
        """Получить объект по ID."""
        conn = self.db_connection.get_connection()
        with conn.cursor() as cursor:
            cursor.execute("SELECT * FROM students WHERE id = %s", (entity_id,))
            return cursor.fetchone()

    
    def get_k_n_short_list(self, k: int, n: int):
        """Получить список k по счету n объектов """
        cursor = self.connection.cursor()
        cursor.execute(f"SELECT * FROM students LIMIT {n} OFFSET {k}")
        result = cursor.fetchall()
        cursor.close()
        return result
    
    def add_entity(self, entity: dict):
        """Добавить объект в базу данных (сгенерировать новый ID)."""
        cursor = self.connection.cursor()
        cursor.execute("INSERT INTO students (first_name, last_name, patronymic, phone) VALUES (?, ?, ?, ?)",
                       (entity['first_name'], entity['last_name'], entity['patronymic'], entity['phone']))
        self.connection.commit()
        cursor.close()
    
    def replace_by_id(self, entity_id: int, new_entity: dict):
        """Заменить элемент списка по ID."""
        cursor = self.connection.cursor()
        cursor.execute("UPDATE students SET first_name = ?, last_name = ?, patronymic = ?, phone = ? WHERE student_id = ?",
                       (new_entity['first_name'], new_entity['last_name'], new_entity['patronymic'], new_entity['phone'], entity_id))
        self.connection.commit()
        cursor.close()
    
    def delete_by_id(self, entity_id: int):
        """Удалить элемент списка по ID."""
        cursor = self.connection.cursor()
        cursor.execute("DELETE FROM students WHERE student_id = ?", (entity_id,))
        self.connection.commit()
        cursor.close()
    
    def get_count(self):
        """Получить количество элементов в базе данных."""
        cursor = self.connection.cursor()
        cursor.execute("SELECT COUNT(*) FROM students")
        count = cursor.fetchone()[0]
        cursor.close()
        return count
