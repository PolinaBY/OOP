classDiagram
    class StudentBase {
         -student_id: int
        -first_name: str
        -last_name: str
        -patronymic: str
        -phone: str
        +validate_student_id(student_id: int) bool
        +validate_first_name(first_name: str) bool
        +validate_last_name(last_name: str) bool
        +validate_patronymic(patronymic: str) bool
        +validate_phone(phone: str) bool
        +to_json() str
        +to_yaml() str
        +to_dict() dict
        +create_new_student(cls, ...)
        +from_string(student_str: str)
        +from_json(cls, json_str: str)
        +create_from_yaml(cls, yaml_string: str)
    }

    class Student {
        - str address
        + validate_address(str address) bool
        + __str__() str
    }
    

    class StudentBrief {
        + from_student(Student student) StudentBrief
        + get_brief_name() str
        + __str__() str
    }
    

    class StudentStrategy {
        <<abstract>>
        + load(str file_path) List~dict~
        + save(str file_path, List~dict~ data)
        + display()
    }

    class StudentRepJson {
        + load(str file_path) List~dict~
        + save(str file_path, List~dict~ data)
        + display()
    }
    

    class StudentRepYaml {
        + load(str file_path) List~dict~
        + save(str file_path, List~dict~ data)
        + display()
    }
    

    class StudentRepBase {
        - str file_path
        - StudentStrategy strategy
        - List~dict~ data
        + load_data()
        + save_data()
        + get_all() list
        + get_by_id(int student_id) dict
        + add_student(dict student)
        + delete_by_id(int student_id)
        + replace_by_id(int student_id, dict updates)
        + get_k_n_short_list(int k, int n) list~StudentBrief~
        + sort_by_field(str field, bool reverse) List~Product~
        + get_count() int
    }

    class StudentAdapter {
        - StudentRepBase student_rep_base
        + get_k_n_short_list(int k, int n)
        + get_by_id(int student_id)
        + delete_by_id(int student_id)
        + update_by_id(int student_id, dict updates)
        + add(dict student)
        + get_count() int
    }

    class DBConnection {
        - instance : DBConnection
        - connection
        + get_connection()
        + close_connection()
    }

    class StudentRepDB {
        - DBConnection db_connection
        + get_by_id(int student_id) dict
        + get_k_n_short_list(int k, int n) list
        + add_student(Student student) int
        + replace_by_id(int student_id, dict updates)
        + delete_by_id(int student_id)
        + get_count() int
    }

    %% Abstract classes
    class Observer {
        <<abstract>>
        +update()*
    }

    class Observable {
        <<abstract>>
        -_observers: List[Observer]
        +add_observer(observer: Observer)
        +remove_observer(observer: Observer)
        +notify_observers()
    }

    %% Main classes
    class ApplicationController {
        -repository: Adapter
        -main_window: MainWindow
        -_current_sort_field: str
        -_current_sort_order: str
        +run()
        +update()
        +handle_add()
        +handle_edit()
        +handle_delete()
        +handle_view()
        +handle_sort(event)
        +handle_page_change(page_number)
    }

    class MainWindow {
        -items_per_page: int
        -current_page: int
        -total_pages: int
        +tree: Treeview
        +student_code_to_id: dict
        +set_add_command(command)
        +set_edit_command(command)
        +set_delete_command(command)
        +set_view_command(command)
        +update_student(student, total_items)
    }

    class AddEditStudentWindow {
        -entries: dict
        -_save_command: function
        +set_save_command(command)
        +get_student_data()
        +set_student_data(student)
        +show_error(message)
    }

    class AddEditStudentController {
        -view: AddEditStudenttWindow
        -repository_adapter: StudentAdapter
        -student: Student
        +handle_save(data)
    }

    class StudentDetailsWindow {
        +display_student(student)
    }

    class StudentDetailsController {
        -view: StudentDetailsWindow
        -student: Student
        +display_student()
    }

    Student --|> StudentBase
    StudentBrief --|> StudentBase
    StudentRepJson --> StudentStrategy
    StudentRepYaml --> StudentStrategy
    StudentRepBase o-- StudentStrategy 
    StudentAdapter o-- StudentRepBase
    StudentRepDB *-- DBConnection

    Observer <|-- ApplicationController 
    Observable <|-- StudentAdapter 
    Observable <|-- StudentRepDB
    ApplicationController *-- MainWindow 
    ApplicationController --> StudentAdapter 
    ApplicationController --> StudentRepDB
    ApplicationController *-- AddEditStudentController
    ApplicationController *-- StudentDetailsController

    AddEditStudentController *-- AddEditStudentWindow
    AddEditStudentController ..> StudentAdapter
    AddEditStudentController ..> StudentRepDB
    AddEditStudentController o-- Student

    StudentDetailsController *-- StudentDetailsWindow
    StudentDetailsController o-- Student
 
    StudentRepDB o-- DBConnection
    
