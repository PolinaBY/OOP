classDiagram
    class StudentBase {
        - int student_id
        - str first_name
        - str last_name
        - str patronymic
        - str phone
        + validate_student_id(int student_id) bool
        + validate_first_name(str first_name) bool
        + validate_last_name(str last_name) bool
        + validate_patronymic(str patronymic) bool
        + validate_phone(str phone) bool
        + from_string(str student_str) StudentBase
        + from_json(str json_str) StudentBase
        + __str__() str
        + __eq__(StudentBase other) bool
    }

    class Student {
        - str address
        + validate_address(str address) bool
        + __str__() str
    }
    

    class StudentBrief {
        + from_student(Student student) StudentBrief
        + get_brief_name() str
        + __str__() str
    }
    

    class StudentStrategy {
        <<abstract>>
        + load(str file_path) List~dict~
        + save(str file_path, List~dict~ data)
        + display()
    }

    class StudentRepJson {
        + load(str file_path) List~dict~
        + save(str file_path, List~dict~ data)
        + display()
    }
    

    class StudentRepYaml {
        + load(str file_path) List~dict~
        + save(str file_path, List~dict~ data)
        + display()
    }
    

    class StudentRepBase {
        - str file_path
        - StudentStrategy strategy
        - List~dict~ data
        + load_data()
        + save_data()
        + get_all() list
        + get_by_id(int student_id) dict
        + add_student(dict student)
        + delete_by_id(int student_id)
        + replace_by_id(int student_id, dict updates)
        + get_k_n_short_list(int k, int n) list~StudentBrief~
        + sort_by_field(str field, bool reverse) List~Product~
        + get_count() int
    }

    class StudentAdapter {
        - StudentRepBase student_rep_base
        + get_k_n_short_list(int k, int n)
        + get_by_id(int student_id)
        + delete_by_id(int student_id)
        + update_by_id(int student_id, dict updates)
        + add(dict student)
        + get_count() int
    }

    class DBConnection {
        - instance : DBConnection
        - connection
        + get_connection()
        + close_connection()
    }

    class StudentRepDB {
        - DBConnection db_connection
        + get_by_id(int student_id) dict
        + get_k_n_short_list(int k, int n) list
        + add_student(Student student) int
        + replace_by_id(int student_id, dict updates)
        + delete_by_id(int student_id)
        + get_count() int
    }

    Student --|> StudentBase
    StudentBrief --|> StudentBase
    StudentRepJson --> StudentStrategy
    StudentRepYaml --> StudentStrategy
    StudentRepBase o-- StudentStrategy 
    StudentAdapter o-- StudentRepBase
    StudentRepDB *-- DBConnection
