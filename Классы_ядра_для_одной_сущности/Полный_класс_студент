class Student:
    def __init__(self, student_id: int, first_name: str, last_name: str, patronymic: str, address: str, phone: str):
        # Поля инкапсулированы
        self.__student_id = student_id
        self.__first_name = first_name
        self.__last_name = last_name
        self.__patronymic = patronymic
        self.__address = address
        self.__phone = phone

    # Геттеры 
    
    @property
    def student_id(self):
        return self.__student_id

    @property
    def first_name(self):
        return self.__first_name

    @property
    def last_name(self):
        return self.__last_name

    @property
    def patronymic(self):
        return self.__patronymic

    @property
    def address(self):
        return self.__address

    @property
    def phone(self):
        return self.__phone

    # Сеттеры 
    
    @student_id.setter
    def student_id(self, student_id: int):
        if isinstance(student_id, int) and student_id > 0:
            self.__student_id = student_id
        else:
            raise ValueError("ID студента должен быть положительным целым числом.")

    @first_name.setter
    def first_name(self, first_name: str):
        if isinstance(first_name, str) and first_name.strip():
            self.__first_name = first_name
        else:
            raise ValueError("Имя должно быть непустой строкой.")

    @last_name.setter
    def last_name(self, last_name: str):
        if isinstance(last_name, str) and last_name.strip():
            self.__last_name = last_name
        else:
            raise ValueError("Фамилия должна быть непустой строкой.")

    @patronymic.setter
    def patronymic(self, patronymic: str):
        if isinstance(patronymic, str) and patronymic.strip():
            self.__patronymic = patronymic
        else:
            raise ValueError("Отчество должно быть непустой строкой.")

    @address.setter
    def address(self, address: str):
        if isinstance(address, str) and address.strip():
            self.__address = address
        else:
            raise ValueError("Адрес должен быть непустой строкой.")

    @phone.setter
    def phone(self, phone: str):
        if isinstance(phone, str) and phone.strip():
            self.__phone = phone
        else:
            raise ValueError("Телефон должен быть непустой строкой.")

